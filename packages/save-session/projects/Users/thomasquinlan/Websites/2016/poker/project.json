[{"text":"\"use strict\";\n\nclass Player {\n    constructor(name, amount) {\n        this.name = name;\n        this.amount = amount;\n        this.hand = [];\n    }\n\n    getPlayerInfo() {\n        return {\n            name: this.name,\n            amount: this.amount,\n            hand: this.hand\n        };\n    }\n\n    setAmount(amount) {\n        this.amount += amount;\n    }\n\n    setHand(hand) {\n        this.hand = hand;\n    }\n}\n\nmodule.exports = Player;\n","diskText":"b5e9b4f543ab4eacc4b788420ba5660e","path":"/Users/thomasquinlan/Websites/2016/poker/pokerGame/Player.js"},{"text":"\"use strict\";\nconst _ = require(\"lodash\");\nconst Deck = require(\"./Deck\");\n\nclass PreGameHighCards {\n    constructor(players) {\n        var availableCards = new Deck();\n        _.forEach(players, player => {\n            player.setHand([availableCards.dealCards(1)]);\n        });\n    }\n}\n\nmodule.exports = PreGameHighCards;\n","diskText":"00d228d9ca3bd96ac75201baf7fa1eea","path":"/Users/thomasquinlan/Websites/2016/poker/pokerGame/PreGameHighCards.js"},{"text":"\"use strict\";\nconst _ = require(\"lodash\");\nconst cardConstants = require(\"./constants/cardConstants\");\n\nclass Deck {\n    constructor() {\n        this.availableCards = _.chain(cardConstants).reduce((result, cardConstant, n) => {\n            result.push(n);\n            return result;\n        }, []).shuffle().value();\n    }\n\n    dealCards(numberOfCardsToDeal) {\n        return this.availableCards.pop(numberOfCardsToDeal);\n    }\n}\n\nmodule.exports = Deck;\n","diskText":"30613e47885f57723b850f60411343a1","path":"/Users/thomasquinlan/Websites/2016/poker/pokerGame/Deck.js"},{"text":"const test = require(\"tape\");\nconst PokerGame = require(\"../pokerGame/PokerGame\");\nconst _ = require(\"lodash\");\nconst pokerGameStatuses = require(\"../pokerGame/constants/pokerGameStatuses\");\nconst texasHoldemDeckConstants = require(\"../pokerGame/constants/texasHoldemDeck\");\n\nvar playersAmounts = [\n    {\n        name: \"tom\",\n        amount: 20\n    },\n    {\n        name: \"ryan\",\n        amount: 20\n    }\n];\n\ntest(\"test create poker game\", t => {\n    var pokerGame = new PokerGame(_.cloneDeep(playersAmounts));\n\n    t.equal(pokerGame.getGameStatus(), pokerGameStatuses.DEAL_CARDS, \"Game status should be DEAL_CARDS\");\n    t.equal(pokerGame.getPlayersInfo().length, playersAmounts.length, \"playersInfo length should be equal to number of players\");\n\n    t.end();\n});\n\ntest(\"test dealHighCards and voteForWinner\", t => {\n    var pokerGame = new PokerGame(_.cloneDeep(playersAmounts));\n\n    pokerGame.dealHighCards();\n\n    _.forEach(pokerGame.getPlayersInfo(), player => {\n        t.equal(player.hand.length, 1, \"The player should only have one hand\");\n        _.forEach(player.hand, card => {\n            t.true(_.isNumber(card), \"card should be a number\");\n        });\n    });\n    t.equal(pokerGame.getGameStatus(), pokerGameStatuses.VOTE_FOR_WINNER, \"Game status should be VOTE_FOR_WINNER\");\n\n    pokerGame.voteForWinner(\"tom\");\n    t.equal(pokerGame.getGameWinner(), \"tom\", \"The game winner should be tom\");\n\n    t.end();\n});\ntest(\"test dealCardsForTexasHoldem and see flop\", t => {\n    var pokerGame = new PokerGame(_.cloneDeep(playersAmounts));\n\n    pokerGame.dealCardsForTexasHoldem();\n\n    _.forEach(pokerGame.getPlayersInfo(), player => {\n        t.equal(player.hand.length, 1, \"The player should only have one hand\");\n        _.forEach(player.hand, card => {\n            t.true(_.isNumber(card), \"card should be a number\");\n        });\n    });\n    t.equal(pokerGame.getGameStatus(), pokerGameStatuses.BET_CHECK_OR_FOLD, \"Game status should be VOTE_FOR_WINNER\");\n\n    t.false(pokerGame.getTexasHoldemTableCards(texasHoldemDeckConstants.FLOP), \"shouldn't be able to get the flop because the flop hasn't been dealt yet\");\n\n    t.end();\n});\n","diskText":"0a4ba815932e46f037af58fa6b56fccd","path":"/Users/thomasquinlan/Websites/2016/poker/test/TestPokerGame.js"},{"text":"{\n  \"name\": \"TexasHoldemPokerGame\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Texam Holdem Poker\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"gulp test\"\n  },\n  \"repository\": {\n      \"type\": \"git\",\n      \"url\": \"git://github.com/tquinlan1992/PokerGame.git\"\n  },\n  \"author\": \"\",\n  \"license\": \"ISC\",\n  \"jshintConfig\": {\n    \"esnext\": true,\n    \"curly\": true,\n    \"forin\": true,\n    \"eqeqeq\": true,\n    \"eqnull\": true,\n    \"latedef\": \"nofunc\",\n    \"notypeof\": true,\n    \"undef\": true,\n    \"unused\": true,\n    \"node\": true\n  },\n  \"dependencies\": {\n    \"lodash\": \"^4.15.0\"\n  },\n  \"devDependencies\": {\n    \"gulp\": \"^3.9.1\",\n    \"gulp-tape\": \"0.0.9\",\n    \"tap-colorize\": \"^1.2.0\",\n    \"tape\": \"^4.6.0\"\n  }\n}\n","diskText":"4c17f19853f10729a216b4f25336aec5","path":"/Users/thomasquinlan/Websites/2016/poker/package.json"},{"text":"const PokerGame = require(\"./pokerGame/PokerGame\");\n\nmodule.exports = PokerGame;\n","diskText":"d5fd033ff0a0370a3b8a3e7d532b6b55","path":"/Users/thomasquinlan/Websites/2016/poker/index.js"},{"text":"var gulp = require('gulp');\nvar tape = require('gulp-tape');\nvar tapColorize = require('tap-colorize');\n\ngulp.task('test', function() {\n  return gulp.src('test/*.js')\n    .pipe(tape({\n      reporter: tapColorize()\n    }));\n});\n","diskText":"a80b210218d7716075d2247d04ea6897","path":"/Users/thomasquinlan/Websites/2016/poker/gulpfile.js"},{"text":"\"use strict\";\nconst _ = require(\"lodash\");\nconst Player = require(\"./Player\");\nconst PreGameHighCards = require(\"./PreGameHighCards\");\nconst pokerGameStatuses = require(\"./constants/pokerGameStatuses\");\nconst TexasHoldemDeck = require(\"./TexasHoldemDeck\");\nconst texasHoldemDeckConstants = require(\"./constants/texasHoldemDeck\");\n\nclass PokerGame {\n    constructor(playersAmounts) {\n\n        this.players = _.map(playersAmounts, (player) => {\n            return new Player(player.name, player.amount);\n        });\n\n        this.gameStatus = pokerGameStatuses.DEAL_CARDS;\n    }\n\n    getPlayersInfo() {\n        return _.map(this.players, player => {\n            return player.getPlayerInfo();\n        });\n    }\n\n    getPlayers() {\n        return this.players;\n    }\n\n    dealHighCards() {\n        new PreGameHighCards(this.getPlayers());\n        this.gameStatus = pokerGameStatuses.VOTE_FOR_WINNER;\n    }\n\n    dealCardsForTexasHoldem() {\n        this.texasHoldemDeck = new TexasHoldemDeck(this.getPlayers());\n        this.gameStatus = pokerGameStatuses.BET_CHECK_OR_FOLD;\n    }\n\n    getTexasHoldemTableCards(flopTurnRiver) {\n        switch(flopTurnRiver) {\n            case texasHoldemDeckConstants.FLOP:\n                if (_.chain(texasHoldemDeckConstants).omit(\"PRE_FLOP\").includes(this.texasHoldemDeck.getStatus()).value()) {\n                    return this.texasHoldemDeck.getFlop();\n                }\n        }\n    }\n\n    getGameStatus() {\n        return this.gameStatus;\n    }\n\n    voteForWinner(name) {\n        this.gameWinner = name;\n    }\n\n    getGameWinner() {\n        return this.gameWinner;\n    }\n}\n\nmodule.exports = PokerGame;\n","diskText":"f6b595c8d8265241164fbf4f32b7d01a","path":"/Users/thomasquinlan/Websites/2016/poker/pokerGame/PokerGame.js"},{"text":"module.exports = {\n    PRE_FLOP: 0,\n    FLOP: 1,\n    TURN: 2,\n    RIVER: 3\n};\n","diskText":"7a71e02196805e4e299917ffd1294685","path":"/Users/thomasquinlan/Websites/2016/poker/pokerGame/constants/texasHoldemDeck.js"},{"text":"\"use strict\";\nconst _ = require(\"lodash\");\nconst Deck = require(\"./Deck\");\nconst texasHoldemDeckConstants = require(\"./constants/texasHoldemDeck\");\n\nclass PreGameHighCards {\n    constructor(players) {\n\n        var availableCards = new Deck();\n        _.forEach(players, player => {\n            player.setHand([availableCards.dealCards(2)]);\n        });\n\n        this.status = texasHoldemDeckConstants.PRE_FLOP;\n\n        this.flop = availableCards.dealCards(3);\n\n        this.turn = availableCards.dealCards(1);\n\n        this.river = availableCards.dealCards(1);\n    }\n\n    getFlop() {\n        this.status = texasHoldemDeckConstants.FLOP;\n        return this.flop;\n    }\n\n    getTurn() {\n        this.status = texasHoldemDeckConstants.TURN;\n        return this.turn;\n    }\n\n    getRiver() {\n        this.status = texasHoldemDeckConstants.RIVER;\n        return this.river;\n    }\n\n    getStatus() {\n        return this.status;\n    }\n\n\n}\n\nmodule.exports = PreGameHighCards;\n","diskText":"80c875c9f59bc9fcc937df96ffc554c0","path":"/Users/thomasquinlan/Websites/2016/poker/pokerGame/TexasHoldemDeck.js"},{"text":"module.exports = {\n    DEAL_CARDS: 0,\n    VOTE_FOR_WINNER: 2,\n    BET_CHECK_OR_FOLD: 3\n};\n","diskText":"fa63ae33ac6ff87f5e6907b2607e23ae","path":"/Users/thomasquinlan/Websites/2016/poker/pokerGame/constants/pokerGameStatuses.js"},{"path":"/Users/thomasquinlan/Websites/2016/qaCompanyManagement/test/routes/product/TestPutPostProduct.js"}]